/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_dykman_j_JInterface */

#ifndef _Included_org_dykman_j_JInterface
#define _Included_org_dykman_j_JInterface
#ifdef __cplusplus
extern "C" {
#endif
#undef org_dykman_j_JInterface_MTYOFM
#define org_dykman_j_JInterface_MTYOFM 1L
#undef org_dykman_j_JInterface_MTYOER
#define org_dykman_j_JInterface_MTYOER 2L
#undef org_dykman_j_JInterface_MTYOLOG
#define org_dykman_j_JInterface_MTYOLOG 3L
#undef org_dykman_j_JInterface_MTYOSYS
#define org_dykman_j_JInterface_MTYOSYS 4L
#undef org_dykman_j_JInterface_MTYOEXIT
#define org_dykman_j_JInterface_MTYOEXIT 5L
#undef org_dykman_j_JInterface_MTYOFILE
#define org_dykman_j_JInterface_MTYOFILE 6L
/*
 * Class:     org_dykman_j_JInterface
 * Method:    getVariableNative
 * Signature: (JLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_dykman_j_JInterface_getVariableNative
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_dykman_j_JInterface
 * Method:    callJNative
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_dykman_j_JInterface_callJNative
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_dykman_j_JInterface
 * Method:    destroyJNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_dykman_j_JInterface_destroyJNative
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_dykman_j_JInterface
 * Method:    initializeJNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_dykman_j_JInterface_initializeJNative
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
