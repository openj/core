<html>

<head>
<title>An Implementation of J -- Glossary and Index</title>
</head>

<body>

<p align=center><font size="6"><b>Glossary and Index</b></font><br>
<font size="4"><b><a href="ioj.htm">An Implementation of J</a></b></font></p>

<hr>
<br>

An explanation is provided for significant names in the system.
Names spelled with majuscules denote defined 
types<tt> </tt>(<tt>typedef</tt>)<tt> </tt>or<tt> #define </tt>
constants and macros; those spelled with minuscules denote
C functions and variables.<br><br>

Each entry has a name, its frequency of occurrence,
and a brief description.<br>

<table>
<tr valign=top>
<td>&nbsp;&nbsp;&nbsp;</td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td> </td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#A"><tt>A</tt></a></td>
<td>1157</td>
<td>the data type of an array; 
the data type for a<tt> <a href="#BOX">BOX</a> </tt>array</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#F2"><tt>a</tt></a></td>
<td>1855</td>
<td>the left argument of a verb</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>a0j1</tt></a></td>
<td>9</td>
<td>the complex atom<tt> 0j1</tt></td>
</tr>

<tr valign=top><td><a href="iojAdv.htm">adverb</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#AF"><tt>AF</tt></a></td>
<td>58</td>
<td>the data type of a function that takes array arguments 
and returns an array result</td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#agreement">agreement</a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#APart"><tt>AH</tt></a></td>
<td>16</td>
<td>the number of words in the <a href="#header">header</a> of an array, 
excluding the shape</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>ainf</tt></a></td>
<td>14</td>
<td>the floating point atom<tt> _</tt></td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#APart"><tt>AN(x)</tt></a></td>
<td>759</td>
<td>the<tt> n </tt>part of an array (the number of atoms in the value part)</td>
</tr>

<tr valign=top>
<td><a href="ioj.htm">APL</a></td>
<td> </td>
<td>A Programming Language</td>
</tr>

<tr valign=top><td><a href="iojNoun.htm#arrayutil"><tt>apv(n,b,m)</tt></a></td>
<td>96</td>
<td>the arithmetic progression vector<tt> b+m*i.n </tt></td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#APart"><tt>AR(x)</tt></a></td>
<td>581</td>
<td>the<tt> r </tt>part of an array; the rank of an array</td>
</tr>

<tr valign=top><td><a href="iojNoun.htm#Arrays">array</a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#APart"><tt>AS(x)</tt></a></td>
<td>477</td>
<td>the<tt> s </tt>part of an array; the shape of an array</td>
</tr>

<tr valign=top><td><a href="iojSent.htm#Word Formation">ASCII</a></td></tr>

<tr valign=top>
<td><a href="iojDisp.htm#asgn"><tt>asgn</tt></a></td>
<td>10</td>
<td>1 if assignment is last operation on a user input line</td>
</tr>

<tr valign=top><td><a href="iojSp.htm#assembly code">assembly code</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#ASSERT"><tt>ASSERT(p,e)</tt></a></td>
<td>822</td>
<td>signal error<tt> e </tt>if proposition<tt> p </tt>is <i>not</i> true</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#APart"><tt>AT(x)</tt></a></td>
<td>733</td>
<td>the<tt> t </tt>part of an array; the type of an array</td>
</tr>

<tr valign=top><td><a href="iojRep.htm#Atomic">atomic representation</a></td></tr>

<tr valign=top><td><a href="iojVerb.htm#atomic">atomic verb</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#types"><tt>B</tt></a></td>
<td>706</td>
<td>the data type for a<tt> <a href="#B01">B01</a> </tt>array</td>
</tr>

<tr valign=top>
<a name="B01"></a>
<td><a href="iojNoun.htm#types"><tt>B01</tt></a></td>
<td>160</td>
<td>Boolean array type<tt> </tt>
(<tt>BOOL </tt>conflicts with C usage)</td>
</tr>

<tr valign=top><td><a href="iojComp.htm">Bernecky, Robert</a></td></tr>

<tr valign=top><td><a href="iojBib.htm#PCB">Berry, Paul</a></td></tr>

<tr valign=top>
<a name="BOX"></a>
<td><a href="iojNoun.htm#types"><tt>BOX</tt></a></td>
<td>115</td>
<td>boxed array type</td>
</tr>

<tr valign=top><td><a href="iojDisp.htm#Boxed">box drawing character</a></td></tr>

<tr valign=top><td><a href="iojDisp.htm#Boxed">boxed display</a></td></tr>

<tr valign=top><td><a href="iojRep.htm#Boxed">boxed representation</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#bp"><tt>bp(t)</tt></a></td>
<td>92</td>
<td>the number of bytes per atom of type<tt> t </tt></td>
</tr>

<tr valign=top><td><a href="iojBib.htm#Burke">Burke, Chris</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#types"><tt>C</tt></a></td>
<td>566</td>
<td>the data type for a<tt> <a href="#LIT">LIT</a> </tt>array</td>
</tr>

<tr valign=top>
<a name="CMPX"></a>
<td><a href="iojNoun.htm#types"><tt>CMPX</tt></a></td>
<td>83</td>
<td>complex number array type</td>
</tr>

<tr valign=top><td><a href="iojComp.htm">comparatives</a></td></tr>

<tr valign=top><td><a href="iojComp.htm#tolerance">comparison tolerance</a></td></tr>

<tr valign=top><td><a href="iojAdv.htm">conjunctions</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#constants">constants</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#conventional function">conventional function</a></td>
<td> </td>
<td>a function that returns zero on zero arguments and on errors</td>
</tr>

<tr valign=top><td><a href="iojNoun.htm#arrayutil"><tt>cstr(s)</tt></a></td>
<td>93</td>
<td>a string with value the characters in the 0-terminated string<tt> s</tt></td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojAdv.htm#df1"><tt>df1(w,self)</tt></a></td>
<td>90</td>
<td>apply the monad of the verb<tt> self</tt></td>
</tr>

<tr valign=top>
<td><a href="iojAdv.htm#df2"><tt>df2(a,w,self)</tt></a></td>
<td>67</td>
<td>apply the dyad of the verb<tt> self</tt></td>
</tr>

<tr valign=top><td><a href="iojBib.htm#JDictionary">dictionary</a></td></tr>

<tr valign=top><td><a href="iojDisp.htm">display</a></td></tr>

<tr valign=top>
<td><tt>DO(n,stmt)</tt></td>
<td>905</td>
<td>execute<tt> n </tt>times the statement<tt> stmt</tt>,<tt> </tt> 
with local variable<tt> i </tt>running from<tt> 0 </tt>to<tt> n-1</tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#ds"><tt>ds(s)</tt></a></td>
<td>151</td>
<td>the primitive whose ID is<tt> s</tt></td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>

<tr valign=top>
<td><a href="iojSent.htm#enqueue"><tt>enqueue(a,w)</tt></a></td>
<td>3</td>
<td>prepare sentence<tt> w </tt>for parsing;<tt> </tt>
<tt> a </tt>is<tt> <a href="#wordil">wordil(w)</a></tt></td>
</tr>

<tr valign=top><td><a href="iojNoun.htm#EPILOG"><tt>EPILOG(x)</tt></a></td>
<td>82</td>
<td>free temporary storage used since the 
last<tt> <a href="#PROLOG">PROLOG</a></tt>,<tt> </tt>then return<tt> x</tt></td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#errors">error handling</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#evinit"><tt>evinit</tt></a></td>
<td>3</td>
<td>initialize the error messages</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#evm"><tt>evm</tt></a></td>
<td>7</td>
<td>a list of the error messages</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#F1"><tt>F1(f)</tt></a></td>
<td>705</td>
<td>define<tt> f </tt>as a monadic verb or an adverb</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#F1RANK"><tt>F1RANK(r,f1,self)</tt></a></td>
<td>52</td>
<td>implements monadic rank<tt> r </tt>on the verb<tt> self </tt>whose 
monad is<tt> f1 </tt></td>
</tr>

<tr valign=top><td>
<a href="iojVerb.htm#F2"><tt>F2(f)</tt></a></td>
<td>326</td>
<td>define<tt> f </tt>as a dyadic verb or a conjunction</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#F2RANK"><tt>F2RANK(l,r,f2,self)</tt></a></td>
<td>30</td>
<td>implements dyadic ranks<tt> l </tt>and<tt> r </tt>on the 
verb<tt> self </tt>whose dyad is<tt> f2 </tt></td>
</tr>

<tr valign=top><td><a href="iojBib.htm#Falkoff">Falkoff, Adin</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#fit">fit</a></td>
<td> </td>
<td>the conjunction<tt> !. </tt>that produces
<a href="#variant">variants</a> of a verb</td>
</tr>

<tr valign=top>
<a name="FL"></a>
<td><a href="iojNoun.htm#types"><tt>FL</tt></a></td>
<td>115</td>
<td>floating point array type</td>
</tr>

<tr valign=top>
<td><a href="iojSent.htm#folk"><tt>folk(x,y,z)</tt></a></td>
<td>53</td>
<td>implements a trident<tt> </tt>(<tt>fork </tt>conflicts with UNIX usage)</td>
</tr>

<tr valign=top><td><a href="iojSent.htm#fork">fork</a></td></tr>

<tr valign=top><td><a href="iojXenos.htm">foreign conjunction</a></td></tr>

<tr valign=top><td><a href="iojDisp.htm#Formatted">format</a></td></tr>

<tr valign=top><td><a href="iojDisp.htm#Formatted">formatted display</a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#free"><tt>free(x)</tt></a></td>
<td> </td>
<td>C library routine; frees memory block<tt> x </tt>previously 
allocated by<tt> malloc</tt></td>
</tr>

<tr valign=top>
<td><a href="iojComp.htm#fuzz"><tt>fuzz</tt></a></td>
<td>13</td>
<td>a system parameter used in domain tests</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#GA"><tt>GA(t,n,r,s)</tt></a></td>
<td>583</td>
<td>create an array of type<tt> t </tt>of rank<tt> r </tt>and 
shape<tt> s</tt>,<tt> </tt>with<tt> n </tt>atoms</td>
</tr>

<tr valign=top><td><a href="iojRep.htm#gerund">gerund</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#Global Variables">global variables</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<a name="header"></a>
<td><a href="iojNoun.htm#header">header</a></td>
<td> </td>
<td>the non-value parts of an array, offset, flag, max bytes, type, etc.</td>
</tr>

<tr valign=top><td><a href="iojSent.htm#hook">hook</a></td></tr>

<tr valign=top><td><a href="ioj.htm">Hui, Roger</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#types"><tt>I</tt></td>
<td>1537</td>
<td>the data type of an<tt> <a href="#INT">INT</a> </tt>array</td>
</tr>

<tr valign=top>
<td><a href="iojSent.htm#ID">ID</a></td>
<td> </td>
<td>a one-byte value that identifies a primitive</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#iden"><tt>iden(w)</tt></a></td>
<td>6</td>
<td>the identity function for verb<tt> w</tt></td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#identity">identity</a></td></tr>

<tr valign=top><td><a href="iojIntro.htm">immediate execution</a></td></tr>

<tr valign=top>
<td><a href="iojIntro.htm"><tt>immex(w)</tt></a></td>
<td>7</td>
<td>"immediate execution" on<tt> w</tt>,<tt> </tt>
displaying the result if the last operation is not assignment</td>
</tr>

<tr valign=top><td><a href="iojATW.htm">incunabulum</a></td></tr>

<tr valign=top><td><a href="iojSent.htm#inflect">inflect</a></td></tr>

<tr valign=top><td><a href="iojSp.htm#in-place">in-place</a></td></tr>

<tr valign=top>
<a name="INT"></a>
<td><a href="iojNoun.htm#types"><tt>INT</tt></a></td>
<td>390</td>
<td>integer array type</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#inv"><tt>inv(w)</tt></a></td>
<td>21</td>
<td>the obverse for verb<tt> w</tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#invamp"><tt>invamp</tt></a></td>
<td>3</td>
<td>the obverse for verb<tt> w </tt>which is of 
the form<tt> x&v </tt>or<tt> v&y</tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#invf"><tt>invf</tt></a></td>
<td>2</td>
<td>a 2-row table of primitives whose obverses are also primitive</td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#inverse">inverse</a></td></tr>

<tr valign=top><td>
<a href="iojNoun.htm#Constants"><tt>iv0</tt></a></td>
<td>17</td>
<td><tt>,2-2</tt>,<tt> </tt>the integer vector 0</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>iv1</tt></a></td>
<td>18</td>
<td><tt>,2-1</tt>,<tt> </tt>the integer vector 1</td>
</tr>

<tr valign=top><td><a href="iojBib.htm#EBI">Iverson, Eric</a></td></tr>

<tr valign=top><td><a href="ioj.htm#KEI">Iverson, Kenneth E.</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#J"><tt>J</tt></a></td>
<td>606</td>
<td>the data type for<tt> <a href="#jt">jt</a></tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#jerr"><tt>jerr</tt></a></td>
<td>104</td>
<td>the current error number, or 0 if no current error</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#jsignal"><tt>jsignal(e)</tt></a></td>
<td>24</td>
<td>signal error number<tt> e</tt></td>
</tr>

<tr valign=top>
<a name="jt"></a>
<td><a href="iojNoun.htm#jt"><tt>jt</tt></a></td>
<td>2557</td>
<td>points to a structure of all the global variables for a J instance</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojATW.htm">Kiln Farm</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojRep.htm#Linear">linear representation</a></td></tr>

<tr valign=top>
<a name="LIT"></a>
<td><a href="iojNoun.htm#types"><tt>LIT</tt></a></td>
<td>566</td>
<td>literal (character) array type<tt> </tt> 
(<tt>CHAR </tt>conflicts with C usage)</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#malloc"><tt>malloc(n)</tt></a></td>
<td> </td>
<td>C library routine; allocate<tt> n </tt>bytes of memory</td>
</tr>

<tr valign=top><td><a href="iojSent.htm#marker">marker</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#Memory Management">memory management</a></td></tr>

<tr valign=top><td><a href="iojBib.htm#EEM">McDonnell, Eugene</a></td></tr>

<tr valign=top><td><a href="iojBib.htm#McIntyre">McIntyre, Donald</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#Constants"><tt>mtm</tt></a></td>
<td>44</td>
<td>the empty matrix<tt> i.0 0</tt></td>
</tr>

<tr valign=top><td><a href="iojNoun.htm#Constants"><tt>mtv</tt></a></td>
<td>73</td>
<td>the empty vector<tt> i.0</tt></td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojSent.htm#Name Resolution">name resolution</a></td></tr>

<tr valign=top>
<td><a href="iojSent.htm#Word Formation">NB.</a></td>
<td> </td>
<td>comment</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>neg1</tt></a></td>
<td>22</td>
<td>the integer atom<tt> _1</tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#NEVM"><tt>NEVM</tt></a></td>
<td>9</td>
<td>the number of error messages</td>
</tr>

<tr valign=top><td><a href="iojNoun.htm">nouns</a></td></tr>

<tr valign=top><td><a href="iojDisp.htm#Numeric">numeric display</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojVerb.htm#obverse">obverse</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#Constants"><tt>one</tt></a></td>
<td>98</td>
<td>the Boolean atom<tt> 1</tt></td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojSent.htm#Parsing">parsing</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#pdef"><tt>pdef</tt></a></td>
<td>113</td>
<td>initialize the<tt> <a href="#pst">pst</a> </tt>table</td>
</tr>

<tr valign=top><td>
<a href="iojNoun.htm#Constants"><tt>pie</tt></a></td>
<td>5</td>
<td>the floating point atom <font face=Symbol>p</font><tt> </tt>
(<tt>pi </tt>conflicts with C usage)</td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#pinit"><tt>pinit</tt></a></td>
<td>3</td>
<td>initialize the<tt> <a href="#pst">pst</a> </tt>table</td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#PREF1"><tt>PREF1</tt></a></td></tr>

<tr valign=top><td><a href="iojVerb.htm#PREF2"><tt>PREF2</tt></a></td></tr>

<tr valign=top><td><a href="iojFiles.htm#Parsing">program files</a></td></tr>

<tr valign=top>
<a name="PROLOG"></a>
<td><a href="iojNoun.htm#PROLOG"><tt>PROLOG</tt></a></td>
<td>85</td>
<td>establish a checkpoint for temporary storage usage</td>
</tr>

<tr valign=top>
<a name="pst"></a>
<td><a href="iojVerb.htm#pst"><tt>pst</tt></a></td>
<td>16</td>
<td>primitive symbols definition table</td>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<a name="queue"></a>
<td><a href="iojSent.htm#Parsing">queue</a></td>
<td> </td>
<td>data structure for parsing</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#R"><tt>R</tt></a></td>
<td>2510</td>
<td>an alias for<tt> return</tt></td>
</tr>

<tr valign=top><td><a href="iojVerb.htm#rank">rank</a></td></tr>

<tr valign=top>
<td><a href="iojVerb.htm#rank1ex"><tt>rank1ex(w,fs,r,f1)</tt></a></td>
<td>16</td>
<td>execute<tt> fs"r w</tt>;<tt> f1 </tt>is the monad of<tt> fs</tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#rank2ex"><tt>rank2ex(a,w,fs,l,r,f2)</tt></a></td>
<td>29</td>
<td>execute<tt> a fs"(l,r) w</tt>;<tt> f2 </tt>is the dyad of<tt> fs</tt></td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#ravel">ravel</a></td>
<td> </td>
<td>the atoms of an array, in ravelled (row major) order</td>
</tr>

<tr valign=top><td>
<a href="iojVerb.htm#RE"><tt>RE(x)</tt></a></td>
<td>220</td>
<td>return 0 if an error is signalled in executing<tt> x</tt>
</td>
</tr>

<tr valign=top><td><a href="iojSp.htm#recognized phrase">recognized phrase</a></td></tr>

<tr valign=top><td><a href="iojRep.htm">representation</a></td></tr>

<tr valign=top><td><a href="iojSent.htm#Word Formation">rhematic rules</a></td></tr>

<tr valign=top><td>
<a href="iojVerb.htm#RZ"><tt>RZ(x)</tt></a></td>
<td>1537</td>
<td>return 0 if<tt> x </tt>is 0</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td>
<a href="iojNoun.htm#arrayutil"><tt>sc(k)</tt></a></td>
<td>217</td>
<td>an integer atom with value<tt> k</tt>;<tt> </tt>equivalent to<tt> <a href="#sc4">sc4</a>(INT,k)</tt></td>
</tr>

<tr valign=top>
<a name="sc4"></a>
<td><a href="iojNoun.htm#arrayutil"><tt>sc4(t,k)</tt></a></td>
<td>5</td>
<td>an atom of type<tt> t </tt>with 4-byte value<tt> k </tt></td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#arrayutil"><tt>scc(c)</tt></a></td>
<td>17</td>
<td>a literal atom with value <tt> c </tt></td>
</tr>

<tr valign=top><td>
<a href="iojNoun.htm#arrayutil"><tt>scf(x)</tt></a></td>
<td>26</td>
<td>a floating point atom with value<tt> x </tt></td>
</tr>

<tr valign=top>
<td><a href="iojVerb.htm#self"><tt>self</tt></a></td>
<td>148</td>
<td>an array representing the current verb</td>
</tr>

<tr valign=top><td><a href="iojSp.htm">special code</a></td></tr>

<tr valign=top>
<td><a href="iojSent.htm#spell"><tt>spell</tt></a></td>
<td>5</td>
<td>a 3-row table defining the primitive words</td>
</tr>

<tr valign=top>
<td><a href="iojSent.htm#spellin"><tt>spellin(n,s)</tt></a></td>
<td>5</td>
<td>the ID of the word in the length-<tt>n </tt>string<tt> s</tt></td>
</tr>

<tr valign=top><td><a href="iojSent.htm#Word Formation">spelling</a></td></tr>

<tr valign=top>
<td><a href="iojSent.htm#spellout"><tt>spellout(c)</tt></a></td>
<td>19</td>
<td>spell out the word whose ID is<tt> c</tt></td>
</tr>

<tr valign=top><td><a href="iojSent.htm#Parsing">stack</a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#arrayutil"><tt>str(n,s)</tt></a></td>
<td>52</td>
<td>a string (literal list) of length<tt> n </tt>with value the characters 
pointed to by<tt> s </tt></td>
</tr>

<tr valign=top>
<a name="SYMB"></a>
<td><a href="iojSent.htm#name resolution"><tt>SYMB</tt></a></td>
<td>11</td>
<td>symbol table array type</td>
</tr>

<tr valign=top>
<td><a href="iojSent.htm#Name Resolution"><tt>symbis(a,w,g)</tt></a></td>
<td>10</td>
<td>assign the name<tt> a </tt>to array<tt> w </tt>in symbol table<tt> g</tt></td>
</tr>

<tr valign=top><td><a href="iojSent.htm#Name Resolution">symbol table</a></td></tr>

<tr valign=top>
<td><a href="iojSent.htm#Name Resolution"><tt>symbrd(w)</tt></a></td>
<td>10</td>
<td>retrieve the value for name<tt> w </tt>from the current symbol table</td>
</tr>

<tr valign=top><td><a href="iojSumm.htm#Word Formation">system summary</a></td></tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top><td><a href="iojTest.htm">test scripts</a></td></tr>

<tr valign=top>
<td><a href="iojDisp.htm"><tt>thorn1(w)</tt></a></td>
<td>18</td>
<td>implements the monad<tt> ":</tt></td>
</tr>

<tr valign=top>
<td><a href="iojSent.htm#tokens"><tt>tokens(w)</tt></a></td>
<td>16</td>
<td>tokenize sentence<tt> w</tt>;<tt> </tt>
convert<tt> w </tt>into a parse <a href="#queue">queue</a></td>
</tr>

<tr valign=top><td><a href="iojComp.htm#tolerance">tolerance</a></td></tr>

<tr valign=top>
<td><a href="iojIntro.htm#tpop"><tt>tpop(x)</tt></a></td>
<td>15</td>
<td>free temporary storage used since the checkpoint<tt> x</tt></td>
</tr>

<tr valign=top><td><a href="iojSent.htm#Trains">trains</a></td></tr>

<tr valign=top><td><a href="iojRep.htm#Tree">tree representation</a></td></tr>

<tr valign=top><td><a href="iojNoun.htm#tstack"><tt>tstack</tt></a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>two</tt></a></td>
<td>24</td>
<td>the integer atom<tt> 2</tt></td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojAdv.htm#V"><tt>V</tt></a></td>
<td>88</td>
<td>the data type of a<tt> <a href="#VERB">VERB</a> </tt>array</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#arrayutil"><tt>v1(k)</tt></a></td>
<td>15</td>
<td>the integer vector<tt> ,k</tt></td>
</tr>

<tr valign=top><td>
<a href="iojNoun.htm#arrayutil"><tt>v2(a,b)</tt></a></td>
<td>72</td>
<td>the integer vector<tt> a,b</tt></td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#value">value</a></td>
<td> </td>
<td>the atoms of an array, in ravelled (row major) order</td>
</tr>

<tr valign=top>
<a name="variant"></a>
<td><a href="iojVerb.htm#variant">variant</a></td>
<td> </td>
</tr>

<tr valign=top>
<td><a href="iojAdv.htm#VAV"><tt>VAV(x)</tt></a></td>
<td>191</td>
<td>the value part of a<tt> <a href="#VERB">VERB</a> </tt>array</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#arrayutil"><tt>vec(t,n,v)</tt></a></td>
<td>81</td>
<td>a vector of length<tt> n </tt>of type<tt> t</tt>,<tt> </tt> 
with values pointed to by<tt> v</tt></td>
</tr>


<tr valign=top>
<a name="VERB"></a>
<td><a href="iojVerb.htm"><tt>VERB</tt></a></td>
<td>185</td>
<td>verb array type; the type of an array representing a verb</td>
</tr>

<tr valign=top><td><a href="iojVerb.htm">verb</a></td></tr>

<tr valign=top>
<td><a href="iojNoun.htm#vi"><tt>vi(x)</tt></a></td>
<td>45</td>
<td>"verify integer", convert<tt> x </tt>to integer</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojVerb.htm#F1"><tt>w</tt></a></td>
<td>3207</td>
<td>the right argument of a verb</td>
</tr>

<tr valign=top><td><a href="iojATW.htm">Whitney, Arthur</a></td></tr>

<tr valign=top><td><a href="iojSent.htm#Word Formation">word formation</a></td></tr>

<tr valign=top><td><a href="iojSp.htm#word-parallel">word parallel</a></td></tr>

<tr valign=top>
<a name="wordil"></a>
<td><a href="iojSent.htm#Word Formation"><tt>wordil(w)</tt></a></td>
<td>5</td>
<td>the words in sentence<tt> w </tt>as a 2-column table of index and length</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#types"><tt>X</tt></a></td>
<td>130</td>
<td>the data type for an<tt> <a href="#XNUM">XNUM</a> </tt>array</td>
</tr>

<tr valign=top>
<a name="XNUM"></a>
<td><a href="iojNoun.htm#types"><tt>XNUM</tt></a></td>
<td>107</td>
<td>extended-precision integer array type</td>
</tr>

<tr valign=top><td>&nbsp;</td></tr>


<tr valign=top>
<td><a href="iojNoun.htm#types"><tt>Z</tt></a></td>
<td>130</td>
<td>the data type for a<tt> <a href="#CMPX">CMPX</a> </tt>array</td>
</tr>

<tr valign=top>
<td><a href="iojNoun.htm#Constants"><tt>zero</tt></a></td>
<td>129</td>
<td>the Boolean atom<tt> 0</tt></td>
</tr>

</table><br>

<br>
<hr>

<a href="iojIndex.htm">Next</a>
 &#149; 
<a href="iojBib.htm">Previous</a>
 &#149; 
<a href="iojIndex.htm">Index</a>
 &#149; 
<a href="ioj.htm#TOC">Table of Contents</a>
<br>

</body>
</html>